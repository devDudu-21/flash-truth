#!/bin/bash

# Alterne entre 'pt' ou 'en'
LANG_FLASH=pt

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Tradu√ß√£o
t() {
  case $LANG_FLASH in
    pt)
      case $1 in
        banner1) echo "USB Flash Drive Checker ‚Äì FlashTruth";;
        banner2) echo "by devDudu-21 üëë";;
        menu1) echo "Verificar informa√ß√µes do pendrive";;
        menu2) echo "Testar pendrive com F3";;
        menu0) echo "Sair";;
        scanning) echo "Analisando informa√ß√µes do dispositivo:";;
        confirm_format) echo "Deseja formatar o pendrive antes do teste? (s/n):";;
        format_warn) echo "ATEN√á√ÉO: Todos os dados ser√£o apagados!";;
        select_fs) echo "Escolha o sistema de arquivos:";;
        done_format) echo "Formata√ß√£o conclu√≠da.";;

        files_found) echo "Conte√∫do detectado (${2} itens).";;
        remove_temp) echo "Deseja remover os arquivos tempor√°rios gerados pelo teste? (s/n):";;
        saved_report) echo "Relat√≥rio salvo em:";;
        *) echo "$1";;
      esac;;
    en)
      case $1 in
        banner1) echo "USB Flash Drive Checker ‚Äì FlashTruth";;
        banner2) echo "by devDudu-21 üëë";;
        menu1) echo "Check USB drive info";;
        menu2) echo "Test USB drive with F3";;
        menu0) echo "Exit";;
        scanning) echo "Analyzing device information:";;
        confirm_format) echo "Do you want to format the drive before testing? (y/n):";;
        format_warn) echo "WARNING: All data will be erased!";;
        select_fs) echo "Choose filesystem type:";;
        done_format) echo "Formatting complete.";;

        files_found) echo "Content detected (${2} items).";;
        remove_temp) echo "Remove temporary files generated by the test? (y/n):";;
        saved_report) echo "Report saved to:";;
        *) echo "$1";;
      esac;;
    *) echo "$1";;
  esac
}

# ASCII Art
ascii_art() {
    echo -e "${GREEN}"
    echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó"
    echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë"
    echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë"
    echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë"
    echo "‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë"
    echo "‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù       ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù"
    echo -e "${NC}"
    echo "             $(t banner1)"
    echo "                  $(t banner2)"
    echo ""
}

listar_dispositivos() {
    pontos_montagem=()
    for base in /media/$USER /run/media/$USER; do
        [ -d "$base" ] || continue
        for dir in "$base"/*; do
            [ -d "$dir" ] && pontos_montagem+=("$dir")
        done
    done

    if [ ${#pontos_montagem[@]} -eq 0 ]; then
        echo -e "${RED}[-] Nenhum pendrive montado encontrado.${NC}"
        exit 1
    fi

    echo -e "${YELLOW}[?] Dispositivos montados detectados:${NC}"
    for i in "${!pontos_montagem[@]}"; do
        echo "[$((i+1))] ${pontos_montagem[$i]}"
    done

    echo ""
    read -p "Digite o n√∫mero do pendrive desejado: " escolha
    if ! [[ "$escolha" =~ ^[0-9]+$ ]] || [ "$escolha" -lt 1 ] || [ "$escolha" -gt "${#pontos_montagem[@]}" ]; then
        echo -e "${RED}[-] Escolha inv√°lida.${NC}"
        exit 1
    fi
    caminho="${pontos_montagem[$((escolha-1))]}"
}

formatar_pendrive() {
    dev=$(df "$caminho" | tail -1 | awk '{print $1}' | sed 's/[0-9]*$//')
    echo -e "${RED}[!] $(t format_warn)${NC}"
    read -p "$(t confirm_format) " confirm
    [[ "$confirm" != "s" && "$confirm" != "S" && "$confirm" != "y" && "$confirm" != "Y" ]] && return

    echo -e "${YELLOW}$(t select_fs)${NC}"
    echo "[1] FAT32"
    echo "[2] exFAT"
    echo "[3] ext4"
    read -p "Op√ß√£o: " tipo_fs
    case "$tipo_fs" in
        1) fs_type="vfat" ;;
        2) fs_type="exfat" ;;
        3) fs_type="ext4" ;;
        *) echo -e "${RED}Op√ß√£o inv√°lida.${NC}"; return ;;
    esac

    sudo umount "${dev}"* &>/dev/null
    sudo mkfs."$fs_type" -F "$dev"
    echo -e "${GREEN}$(t done_format)${NC}"
    sleep 2
}

verificar_info() {
    listar_dispositivos
    dev=$(df "$caminho" | tail -1 | awk '{print $1}' | sed 's/[0-9]*$//')
    info=$(udevadm info --query=all --name="$dev")
    vendor=$(echo "$info" | grep ID_VENDOR= | cut -d= -f2)
    model=$(echo "$info" | grep ID_MODEL= | cut -d= -f2)
    serial=$(echo "$info" | grep ID_SERIAL= | cut -d= -f2)
    serial_short=$(echo "$info" | grep ID_SERIAL_SHORT= | cut -d= -f2)
    fs=$(lsblk -no FSTYPE "$dev" | head -n1)
    size_gb=$(LC_NUMERIC=C lsblk -bno SIZE "$dev" | awk '{printf "%.1f", $1 / (1024^3)}')

    pontos=0
    [[ "$vendor" && "$vendor" != "Generic" && "$vendor" != "Unknown" ]] && ((pontos+=2))
    [[ "$model" && "$model" != "USB_DISK" && "$model" != "Mass_Storage" ]] && ((pontos+=2))
    [[ "$serial" ]] && ((pontos+=2))
    [[ "$serial_short" ]] && ((pontos+=1))
    [[ "$fs" =~ ^(vfat|exfat|ext4|ntfs|iso9660)$ ]] && ((pontos+=1))
    (( $(LC_NUMERIC=C echo "$size_gb >= 8" | bc -l) )) && ((pontos+=2))

    if ((pontos >= 9)); then status="üü¢ Alta confiabilidade"
    elif ((pontos >= 6)); then status="üü° Moderada"
    else status="üî¥ Prov√°vel falsifica√ß√£o"; fi

    echo ""
    echo -e "${GREEN}[+] $(t scanning) $caminho${NC}"
    lsblk -o NAME,SIZE,FSTYPE,MOUNTPOINT,LABEL "$dev"
    echo ""
    echo "$info" | grep -E 'ID_MODEL|ID_VENDOR|ID_SERIAL|ID_USB_DRIVER|ID_SERIAL_SHORT'
    echo ""
    echo -e "${YELLOW}Confiabilidade: $pontos/10 $status${NC}"

    dt=$(date "+%Y-%m-%d_%H%M")
    file="flashtruth_relatorio_${dt}.txt"
    {
        echo "Dispositivo: $caminho"
        echo "Fabricante: $vendor"
        echo "Modelo: $model"
        echo "Serial: $serial"
        echo "Filesystem: $fs"
        echo "Tamanho: $size_gb GB"
        echo "Confiabilidade: $pontos/10 $status"
    } > "$file"
    echo -e "${GREEN}$(t saved_report) $file${NC}"
    read -p "Pressione ENTER para voltar ao menu."
}

testar_pendrive() {
    sudo apt install -y f3 &>/dev/null
    listar_dispositivos
    arquivos=$(find "$caminho" -mindepth 1 | wc -l)
    if [ "$arquivos" -gt 0 ]; then
        echo -e "${RED}[!] $(t files_found "$arquivos")${NC}"
        read -p "$(t confirm_format) " esc
        [[ "$esc" == "s" || "$esc" == "S" || "$esc" == "y" || "$esc" == "Y" ]] && formatar_pendrive
    fi
    f3write "$caminho"
    f3read "$caminho"
    read -p "$(t remove_temp) " clean
    [[ "$clean" == "s" || "$clean" == "S" || "$clean" == "y" || "$clean" == "Y" ]] && rm -f "$caminho"/*.h2w "$caminho"/.f3* &>/dev/null
    echo ""
    read -p "Pressione ENTER para voltar ao menu."
}

main_menu() {
    while true; do
        clear
        ascii_art
        echo -e "${YELLOW}Selecione uma op√ß√£o:${NC}"
        echo "[1] $(t menu1)"
        echo "[2] $(t menu2)"
        echo "[0] $(t menu0)"
        echo ""
        read -p "Op√ß√£o: " opcao
        case $opcao in
            1) verificar_info ;;
            2) testar_pendrive ;;
            0) echo -e "${GREEN}Saindo...${NC}"; exit 0 ;;
            *) echo -e "${RED}Op√ß√£o inv√°lida.${NC}"; sleep 1 ;;
        esac
    done
}

# Execu√ß√£o
main_menu
